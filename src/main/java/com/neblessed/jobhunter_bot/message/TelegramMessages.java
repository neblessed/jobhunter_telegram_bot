package com.neblessed.jobhunter_bot.message;

import com.neblessed.jobhunter_bot.keyboad.ReplyKeyboards;
import com.neblessed.jobhunter_bot.repository.FiltersRepository;
import com.neblessed.jobhunter_bot.service.implementation.FiltersServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;

@Component
public class TelegramMessages {
    @Autowired
    ReplyKeyboards replyKeyboards;
    @Autowired
    FiltersServiceImpl filtersService;
    @Autowired
    FiltersRepository filtersRepository;

    public SendMessage firstInfoMessage(long chatId) {
        SendMessage message = SendMessage
                .builder()
                .chatId(chatId)
                .text("–ü—Ä–∏–≤–µ—Ç, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–µ–Ω—é üëáüèº")
                .replyMarkup(replyKeyboards.mainMenu())
                .build();

        return message;
    }

    public SendMessage searchModeEnabled(long chatId) {
        if (filtersRepository.findAll().stream().anyMatch(x -> x.getTelegram_id() == chatId)) {
            SendMessage message = SendMessage
                    .builder()
                    .chatId(chatId)
                    .text("–†–µ–∂–∏–º –ø—Ä–∏–µ–º–∞ –≤–∞–∫–∞–Ω—Å–∏–π –≤–∫–ª—é—á—ë–Ω ‚úÖ\n"
                            + "\n–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Ä–∞–±–æ—Ç–µ —Å–æ–≥–ª–∞—Å–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Ñ–∏–ª—å—Ç—Ä—É.")
                    .replyMarkup(replyKeyboards.searchMenu())
                    .build();
            return message;
        } else {
            SendMessage message = SendMessage
                    .builder()
                    .chatId(chatId)
                    .text("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ ‚ùå\n"
                    +"\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ")
                    .build();
            return message;
        }
    }

    public SendMessage searchModeDisabled(long chatId) {
        SendMessage message = SendMessage
                .builder()
                .chatId(chatId)
                .text("–†–µ–∂–∏–º –ø—Ä–∏–µ–º–∞ –≤–∞–∫–∞–Ω—Å–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚è∏")
                .replyMarkup(replyKeyboards.mainMenu())
                .build();

        return message;
    }

    public SendMessage userFilter(long chatId) {
        SendMessage message = SendMessage
                .builder()
                .chatId(chatId)
                .text(filtersService.myFilter((int) chatId))
                .replyMarkup(replyKeyboards.mainMenu())
                .build();

        return message;
    }
}
